import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
// sop
import { AreaLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AreaLight";
import { AttribDeleteSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribDelete";
import { BoxSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Box";
import { CameraControlsSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CameraControls";
import { EventsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/EventsNetwork";
import { FileOBJSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/FileOBJ";
import { FuseSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Fuse";
import { HemisphereLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/HemisphereLight";
import { HierarchySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Hierarchy";
import { InstanceSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Instance";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { MergeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Merge";
import { PaletteSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Palette";
import { PerspectiveCameraSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PerspectiveCamera";
import { PointSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Point";
import { PolarTransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PolarTransform";
import { ScatterSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Scatter";
import { TransformResetSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/TransformReset";
import { TransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Transform";
// event
import { CameraOrbitControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls";
import { PointerEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/Pointer";
import { RaycastEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/Raycast";
// mat
import { MeshStandardBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandardBuilder";

export class PolySceneWithNodeMap_scene_01 extends PolyScene {
  node(path: "/cameras"): GeoObjNode;
  node(path: "/cameras/perspectiveCamera_MAIN"): PerspectiveCameraSopNode;
  node(path: "/cameras/perspectiveCamera_DEBUG"): PerspectiveCameraSopNode;
  node(path: "/cameras/merge1"): MergeSopNode;
  node(path: "/cameras/cameraControls1"): CameraControlsSopNode;
  node(
    path: "/cameras/cameraControls1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/cameras/cameraControls2"): CameraControlsSopNode;
  node(
    path: "/cameras/cameraControls2/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/lights"): GeoObjNode;
  node(path: "/lights/hemisphereLight1"): HemisphereLightSopNode;
  node(path: "/lights/areaLight1"): AreaLightSopNode;
  node(path: "/lights/polarTransform1"): PolarTransformSopNode;
  node(path: "/lights/merge1"): MergeSopNode;
  node(path: "/voxelizedObject"): GeoObjNode;
  node(path: "/voxelizedObject/fileOBJ1"): FileOBJSopNode;
  node(path: "/voxelizedObject/hierarchy1"): HierarchySopNode;
  node(path: "/voxelizedObject/transform1"): TransformSopNode;
  node(path: "/voxelizedObject/scatter1"): ScatterSopNode;
  node(path: "/voxelizedObject/point1"): PointSopNode;
  node(path: "/voxelizedObject/fuse1"): FuseSopNode;
  node(path: "/voxelizedObject/box2"): BoxSopNode;
  node(path: "/voxelizedObject/instance1"): InstanceSopNode;
  node(path: "/voxelizedObject/attribDelete1"): AttribDeleteSopNode;
  node(path: "/voxelizedObject/palette1"): PaletteSopNode;
  node(path: "/voxelizedObject/transformReset1"): TransformResetSopNode;
  node(path: "/voxelizedObject/MAT"): MaterialsNetworkSopNode;
  node(
    path: "/voxelizedObject/MAT/meshStandardBuilder_INSTANCES"
  ): MeshStandardBuilderMatNode;
  node(path: "/voxelizedObject/eventsNetwork1"): EventsNetworkSopNode;
  node(path: "/voxelizedObject/eventsNetwork1/raycast1"): RaycastEventNode;
  node(path: "/voxelizedObject/eventsNetwork1/pointer1"): PointerEventNode;
  node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_scene_01 {
  "cameras--transform"?: ParamValueSerializedTypeMap["folder"];
  "cameras--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras--t"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--t-tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--r"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--r-rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--s"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--s-sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--scale"?: ParamValueSerializedTypeMap["float"];
  "cameras--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "cameras--display"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras-perspectiveCamera_MAIN--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_MAIN--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_MAIN--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_MAIN--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_MAIN--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera_MAIN--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-perspectiveCamera_DEBUG--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_DEBUG--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_DEBUG--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_DEBUG--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera_DEBUG--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1--node"?: ParamValueSerializedTypeMap["node_path"];
  "cameras-cameraControls1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--enableKeys"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--keysMode"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--keysPanSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--keysRotateSpeedVertical"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--keysRotateSpeedHorizontal"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2--node"?: ParamValueSerializedTypeMap["node_path"];
  "cameras-cameraControls2-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls2-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls2-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls2-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls2-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls2-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls2-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls2-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls2-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls2-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls2-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--enableKeys"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls2-cameraOrbitControls1--keysMode"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls2-cameraOrbitControls1--keysPanSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--keysRotateSpeedVertical"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-cameraOrbitControls1--keysRotateSpeedHorizontal"?: ParamValueSerializedTypeMap["float"];
  "lights--transform"?: ParamValueSerializedTypeMap["folder"];
  "lights--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "lights--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights--t"?: ParamValueSerializedTypeMap["vector3"];
  "lights--t-tx"?: ParamValueSerializedTypeMap["float"];
  "lights--t-ty"?: ParamValueSerializedTypeMap["float"];
  "lights--t-tz"?: ParamValueSerializedTypeMap["float"];
  "lights--tx"?: ParamValueSerializedTypeMap["float"];
  "lights--ty"?: ParamValueSerializedTypeMap["float"];
  "lights--tz"?: ParamValueSerializedTypeMap["float"];
  "lights--r"?: ParamValueSerializedTypeMap["vector3"];
  "lights--r-rx"?: ParamValueSerializedTypeMap["float"];
  "lights--r-ry"?: ParamValueSerializedTypeMap["float"];
  "lights--r-rz"?: ParamValueSerializedTypeMap["float"];
  "lights--rx"?: ParamValueSerializedTypeMap["float"];
  "lights--ry"?: ParamValueSerializedTypeMap["float"];
  "lights--rz"?: ParamValueSerializedTypeMap["float"];
  "lights--s"?: ParamValueSerializedTypeMap["vector3"];
  "lights--s-sx"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sy"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sz"?: ParamValueSerializedTypeMap["float"];
  "lights--sx"?: ParamValueSerializedTypeMap["float"];
  "lights--sy"?: ParamValueSerializedTypeMap["float"];
  "lights--sz"?: ParamValueSerializedTypeMap["float"];
  "lights--scale"?: ParamValueSerializedTypeMap["float"];
  "lights--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "lights--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "lights--display"?: ParamValueSerializedTypeMap["boolean"];
  "lights--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights-hemisphereLight1--skyColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--skyColor-skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--groundColor-groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position"?: ParamValueSerializedTypeMap["vector3"];
  "lights-hemisphereLight1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-areaLight1--light"?: ParamValueSerializedTypeMap["folder"];
  "lights-areaLight1--color"?: ParamValueSerializedTypeMap["color"];
  "lights-areaLight1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--width"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--height"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "lights-areaLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-polarTransform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "lights-polarTransform1--center"?: ParamValueSerializedTypeMap["vector3"];
  "lights-polarTransform1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--longitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--latitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--depth"?: ParamValueSerializedTypeMap["float"];
  "lights-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject--transform"?: ParamValueSerializedTypeMap["folder"];
  "voxelizedObject--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject--t"?: ParamValueSerializedTypeMap["vector3"];
  "voxelizedObject--t-tx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--t-ty"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--t-tz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--tx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--ty"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--tz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--r"?: ParamValueSerializedTypeMap["vector3"];
  "voxelizedObject--r-rx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--r-ry"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--r-rz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--rx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--ry"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--rz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--s"?: ParamValueSerializedTypeMap["vector3"];
  "voxelizedObject--s-sx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--s-sy"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--s-sz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--sx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--sy"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--sz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--scale"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "voxelizedObject--display"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-fileOBJ1--url"?: ParamValueSerializedTypeMap["string"];
  "voxelizedObject-fileOBJ1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-fileOBJ1--reload"?: ParamValueSerializedTypeMap["button"];
  "voxelizedObject-hierarchy1--mode"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-hierarchy1--levels"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-hierarchy1--objectMask"?: ParamValueSerializedTypeMap["string"];
  "voxelizedObject-hierarchy1--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "voxelizedObject-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "voxelizedObject-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "voxelizedObject-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "voxelizedObject-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "voxelizedObject-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-scatter1--pointsCount"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-scatter1--seed"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-scatter1--useWeightAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-scatter1--weightAttribute"?: ParamValueSerializedTypeMap["string"];
  "voxelizedObject-scatter1--transferAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-scatter1--attributesToTransfer"?: ParamValueSerializedTypeMap["string"];
  "voxelizedObject-scatter1--addIdAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-scatter1--addIdnAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-point1--updateX"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-point1--x"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-point1--updateY"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-point1--y"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-point1--updateZ"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-point1--z"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-point1--updateNormals"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-point1--step"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-fuse1--dist"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-box2--size"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-box2--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "voxelizedObject-box2--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-box2--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-box2--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-box2--sizesx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-box2--sizesy"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-box2--sizesz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-box2--divisions"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-box2--center"?: ParamValueSerializedTypeMap["vector3"];
  "voxelizedObject-box2--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-box2--center-centery"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-box2--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-box2--centerx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-box2--centery"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-box2--centerz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-instance1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "voxelizedObject-instance1--applyMaterial"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-instance1--material"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-attribDelete1--class"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-attribDelete1--name"?: ParamValueSerializedTypeMap["string"];
  "voxelizedObject-palette1--paletteName"?: ParamValueSerializedTypeMap["string"];
  "voxelizedObject-palette1--pickNext"?: ParamValueSerializedTypeMap["button"];
  "voxelizedObject-palette1--pickPrevious"?: ParamValueSerializedTypeMap["button"];
  "voxelizedObject-palette1--pickRandom"?: ParamValueSerializedTypeMap["button"];
  "voxelizedObject-palette1--colorsCount"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-palette1--color1"?: ParamValueSerializedTypeMap["color"];
  "voxelizedObject-palette1--color1-color1r"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color1-color1g"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color1-color1b"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color1r"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color1g"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color1b"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color2"?: ParamValueSerializedTypeMap["color"];
  "voxelizedObject-palette1--color2-color2r"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color2-color2g"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color2-color2b"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color2r"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color2g"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color2b"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color3"?: ParamValueSerializedTypeMap["color"];
  "voxelizedObject-palette1--color3-color3r"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color3-color3g"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color3-color3b"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color3r"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color3g"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color3b"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color4"?: ParamValueSerializedTypeMap["color"];
  "voxelizedObject-palette1--color4-color4r"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color4-color4g"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color4-color4b"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color4r"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color4g"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color4b"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color5"?: ParamValueSerializedTypeMap["color"];
  "voxelizedObject-palette1--color5-color5r"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color5-color5g"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color5-color5b"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color5r"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color5g"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-palette1--color5b"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-transformReset1--mode"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--default"?: ParamValueSerializedTypeMap["folder"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--opacity"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--textures"?: ParamValueSerializedTypeMap["folder"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--map"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--emissive"?: ParamValueSerializedTypeMap["color"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--emissiver"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--metalness"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--roughness"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--advanced"?: ParamValueSerializedTypeMap["folder"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--front"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--blending"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--shadowPCSS"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-MAT-meshStandardBuilder_INSTANCES--shadowPCSSFilterSize"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--mode"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-eventsNetwork1-raycast1--tmouse"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-raycast1--mouse"?: ParamValueSerializedTypeMap["vector2"];
  "voxelizedObject-eventsNetwork1-raycast1--mouse-mousex"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--mouse-mousey"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--mousex"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--mousey"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--overrideMaterial"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-raycast1--material"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-eventsNetwork1-raycast1--pixelColor"?: ParamValueSerializedTypeMap["color"];
  "voxelizedObject-eventsNetwork1-raycast1--pixelColor-pixelColorr"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--pixelColor-pixelColorg"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--pixelColor-pixelColorb"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--pixelColorr"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--pixelColorg"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--pixelColorb"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--pixelAlpha"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--hitThreshold"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--intersectWith"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-eventsNetwork1-raycast1--pointsThreshold"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--planeDirection"?: ParamValueSerializedTypeMap["vector3"];
  "voxelizedObject-eventsNetwork1-raycast1--planeDirection-planeDirectionx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--planeDirection-planeDirectiony"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--planeDirection-planeDirectionz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--planeDirectionx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--planeDirectiony"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--planeDirectionz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--planeOffset"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--targetType"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-eventsNetwork1-raycast1--targetNode"?: ParamValueSerializedTypeMap["node_path"];
  "voxelizedObject-eventsNetwork1-raycast1--objectMask"?: ParamValueSerializedTypeMap["string"];
  "voxelizedObject-eventsNetwork1-raycast1--printFoundObjectsFromMask"?: ParamValueSerializedTypeMap["button"];
  "voxelizedObject-eventsNetwork1-raycast1--traverseChildren"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-raycast1--tposition"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-raycast1--tpositionTarget"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-raycast1--position"?: ParamValueSerializedTypeMap["vector3"];
  "voxelizedObject-eventsNetwork1-raycast1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--positionx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--positiony"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--positionz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--positionTarget"?: ParamValueSerializedTypeMap["param_path"];
  "voxelizedObject-eventsNetwork1-raycast1--tvelocity"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-raycast1--tvelocityTarget"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-raycast1--velocity"?: ParamValueSerializedTypeMap["vector3"];
  "voxelizedObject-eventsNetwork1-raycast1--velocity-velocityx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--velocity-velocityy"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--velocity-velocityz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--velocityx"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--velocityy"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--velocityz"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--velocityTarget"?: ParamValueSerializedTypeMap["param_path"];
  "voxelizedObject-eventsNetwork1-raycast1--geoAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-raycast1--geoAttributeName"?: ParamValueSerializedTypeMap["string"];
  "voxelizedObject-eventsNetwork1-raycast1--geoAttributeType"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-eventsNetwork1-raycast1--geoAttributeValue1"?: ParamValueSerializedTypeMap["float"];
  "voxelizedObject-eventsNetwork1-raycast1--geoAttributeValues"?: ParamValueSerializedTypeMap["string"];
  "voxelizedObject-eventsNetwork1-pointer1--active"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-pointer1--element"?: ParamValueSerializedTypeMap["integer"];
  "voxelizedObject-eventsNetwork1-pointer1--pointerdown"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-pointer1--pointermove"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-pointer1--pointerup"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-pointer1--ctrlKey"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-pointer1--altKey"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-pointer1--shiftKey"?: ParamValueSerializedTypeMap["boolean"];
  "voxelizedObject-eventsNetwork1-pointer1--metaKey"?: ParamValueSerializedTypeMap["boolean"];
}
